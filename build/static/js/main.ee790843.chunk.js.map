{"version":3,"sources":["component/DashHeader.js","action/index.js","component/Autocomplete/MultiSelect.js","component/Autocomplete/Autocomplete.js","component/AddFriend/AddFriend.js","utils/FriendList.js","component/Dropdown.js","component/AddDescription/AddDescription.js","component/AddAmount/Amount.js","component/PaidBy/PaidBy.js","component/Checkbox.js","component/SplitBetween/SplitBetween.js","component/AddAnExpense/AddAnExpense.js","component/Dashbord/ExpenseRemains.js","component/Dashbord/AllFriendsAmount.js","component/Dashbord/DashBoard.js","App.js","reducer/addfriend.js","reducer/index.js","store/index.js","index.js"],"names":["DashHeader","useState","lightMode","setLightMode","useEffect","document","body","classList","add","remove","Navbar","Container","Brand","href","Toggle","Collapse","onClick","className","Text","xmlns","width","height","viewBox","d","addUser","payload","type","showAddUser","selectedFriends","description","addAmount","paidBy","splitBetween","closePopUp","MultiSelect","multiUsers","useSelector","state","addFriend","dispatch","useDispatch","length","map","multiUser","class","userName","newUsers","filter","removeUser","Autocomplete","options","showAddFriendEvent","filterData","setFilterData","activeIndex","setActiveIndex","resultMatched","setResultMatched","input","setInput","setMultiUser","Friends","e","target","innerText","SuggestionsListComponent","suggestion","index","placeholder","onChange","inputData","value","FilterData","x","includes","option","toLowerCase","indexOf","console","log","db","Localbase","AddFriend","friendName","setFriendName","friendList","trim","collection","id","Date","now","then","get","users","FriendList","newUserAdded","Dropdown","label","AddDescription","Amount","PaidBy","paidByList","setPaidByList","paidBy1","Checkbox","items","Array","fill","checkedState","setCheckedState","setSelectedItem","item","name","checked","position","updatedCheckedState","newName","currentState","n","handleOnChange","htmlFor","SplitBetween","SelectedFriends","defaultValue","AddAnExpense","show","onHide","showAddFriend","description1","amount1","amount","SplitBetween1","selectedFriends1","Modal","Header","closeButton","Title","Body","Footer","Button","variant","FirendsConsider","numberOfFriends","TotalnumberOfFriend","amountToBeSplit","AmountReceivedByPayer","Totalamount","TotalAmountPerPerson","payer","splitAmong","ExpenseRemains","totalAmount","totalFriendBalance","Math","sign","toFixed","AllFriendAmount","Object","entries","key","DashBoard","open","balances","setBalance","totalBalance","setTotalBalance","friendM","setFriendM","money","FriendMoney","balance","push","DispalyBalance","Accordion","Item","eventKey","App","initialState","action","rootReducers","combineReducers","store","createStore","applyMiddleware","thunk","rootElement","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.ee790843.chunk.js","sourcesContent":["import { Navbar, Container } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport FontAwesomeIcon from \"react-fontawesome\";\n\nexport default function DashHeader() {\n  const [lightMode, setLightMode] = useState(true);\n\n  useEffect(() => {\n    if (lightMode) {\n      document.body.classList.add(\"bg-light\", \"text-dark\");\n      document.body.classList.remove(\"bg-dark\", \"text-light,\", \"dark-mode\");\n    } else {\n      document.body.classList.add(\"bg-dark\", \"text-light\", \"dark-mode\");\n      document.body.classList.remove(\"bg-light\", \"text-dark\");\n    }\n  }, [lightMode]);\n  const changeClass = () => {\n    setLightMode(!lightMode);\n  };\n  return (\n    <Navbar>\n      <Container>\n        <Navbar.Brand href=\"#home\">Splitwise clone</Navbar.Brand>\n        <Navbar.Toggle />\n        <Navbar.Collapse onClick={changeClass} className=\"justify-content-end\">\n          <Navbar.Text>\n            <span>\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"24\"\n                height=\"24\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path d=\"M24 13.616v-3.232c-1.651-.587-2.694-.752-3.219-2.019v-.001c-.527-1.271.1-2.134.847-3.707l-2.285-2.285c-1.561.742-2.433 1.375-3.707.847h-.001c-1.269-.526-1.435-1.576-2.019-3.219h-3.232c-.582 1.635-.749 2.692-2.019 3.219h-.001c-1.271.528-2.132-.098-3.707-.847l-2.285 2.285c.745 1.568 1.375 2.434.847 3.707-.527 1.271-1.584 1.438-3.219 2.02v3.232c1.632.58 2.692.749 3.219 2.019.53 1.282-.114 2.166-.847 3.707l2.285 2.286c1.562-.743 2.434-1.375 3.707-.847h.001c1.27.526 1.436 1.579 2.019 3.219h3.232c.582-1.636.75-2.69 2.027-3.222h.001c1.262-.524 2.12.101 3.698.851l2.285-2.286c-.744-1.563-1.375-2.433-.848-3.706.527-1.271 1.588-1.44 3.221-2.021zm-12 2.384c-2.209 0-4-1.791-4-4s1.791-4 4-4 4 1.791 4 4-1.791 4-4 4z\" />\n              </svg>\n            </span>\n          </Navbar.Text>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n","export const addUser = (payload) => {\n  return {\n    type: \"ADD_FRIEND\",\n    payload\n  };\n};\nexport const showAddUser = (payload) => {\n  return {\n    type: \"SHOW_ADD_USER\",\n    payload\n  };\n};\nexport const newUserAdded = (payload) => {\n  return {\n    type: \"NEW_USER_ADDED\",\n    payload\n  };\n};\nexport const selectedFriends = (payload) => {\n  return {\n    type: \"SELECTED_FRIENDS\",\n    payload\n  };\n};\nexport const description = (payload) => {\n  return {\n    type: \"DESCRIPTION\",\n    payload\n  };\n};\nexport const addAmount = (payload) => {\n  return {\n    type: \"ADD_AMOUNT\",\n    payload\n  };\n};\nexport const paidBy = (payload) => {\n  return {\n    type: \"PAID_BY\",\n    payload\n  };\n};\nexport const splitBetween = (payload) => {\n  return {\n    type: \"SPLIT_BETWEEN\",\n    payload\n  };\n};\nexport const closePopUp = (payload) => {\n  return {\n    type: \"CLOSE_POP_UP\",\n    payload\n  };\n};\n","import { useSelector, useDispatch } from \"react-redux\";\n\nimport { selectedFriends } from \"../../action/index\";\n\nexport default function MultiSelect() {\n  const multiUsers = useSelector((state) => state.addFriend.selectedFriends);\n  const dispatch = useDispatch();\n  const removeUser = (userName) => {\n    var newUsers = multiUsers.filter((multiUser) => multiUser !== userName);\n    dispatch(selectedFriends(newUsers));\n  };\n  return multiUsers.length ? (\n    multiUsers.map((multiUser) => {\n      return (\n        <button type=\"button\" class=\"btn btn-secondary m-1\">\n          {multiUser}{\" \"}\n          <span class=\"badge badge-light\" onClick={() => removeUser(multiUser)}>\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"10\"\n              height=\"10\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path d=\"M24 20.188l-8.315-8.209 8.2-8.282-3.697-3.697-8.212 8.318-8.31-8.203-3.666 3.666 8.321 8.24-8.206 8.313 3.666 3.666 8.237-8.318 8.285 8.203z\" />\n            </svg>\n          </span>\n        </button>\n      );\n    })\n  ) : (\n    <></>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport MultiSelect from \"./MultiSelect\";\nimport { selectedFriends } from \"../../action/index\";\n\nexport default function Autocomplete({ options, showAddFriendEvent }) {\n  const dispatch = useDispatch();\n  const [filterData, setFilterData] = useState([]);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [resultMatched, setResultMatched] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [multiUsers, setMultiUser] = useState([]);\n  const Friends = useSelector((state) => state.addFriend.selectedFriends);\n  const onChange = (e) => {\n    const inputData = e.target.value;\n    if (Friends.length > 0) {\n      const NewFilterData = options.filter((x) => !Friends.includes(x));\n      var FilterData = NewFilterData.filter(\n        (option) => option.toLowerCase().indexOf(inputData.toLowerCase()) > -1\n      );\n    } else {\n      var FilterData = options.filter(\n        (option) => option.toLowerCase().indexOf(inputData.toLowerCase()) > -1\n      );\n    }\n\n    console.log(Friends, options, \"test1\");\n    setFilterData(FilterData);\n    setInput(inputData);\n    setResultMatched(true);\n    setActiveIndex(0);\n  };\n  const onClick = (e) => {\n    setFilterData([]);\n    setInput(\"\");\n\n    setMultiUser([...Friends, e.target.innerText]);\n\n    setActiveIndex(0);\n    setResultMatched(false);\n  };\n  useEffect(() => {\n    dispatch(selectedFriends(multiUsers));\n  }, [multiUsers]);\n  const SuggestionsListComponent = () => {\n    return filterData.length ? (\n      <ul className=\"list-group\">\n        {filterData.map((suggestion, index) => {\n          let className;\n          if (index === activeIndex) {\n            className = \"list-group-item\";\n          }\n          return (\n            <li className=\"list-group-item\" key={suggestion} onClick={onClick}>\n              {suggestion}\n            </li>\n          );\n        })}\n      </ul>\n    ) : (\n      <div class=\"no-suggestions\">\n        <em>No suggestions, you're on your own!</em>\n      </div>\n    );\n  };\n  return (\n    <div>\n      <ul className=\"badges\">{<MultiSelect />}</ul>\n      <div className=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Please Enter Name\"\n          aria-label=\"Please Enter Name\"\n          aria-describedby=\"basic-addon2\"\n          onChange={onChange}\n          // onKeyDown={onKeyDown}\n          value={input}\n        />\n        <div className=\"input-group-append\">\n          <button\n            onClick={showAddFriendEvent}\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n          >\n            Add Friend\n          </button>\n        </div>\n      </div>\n      {resultMatched && input && <SuggestionsListComponent />}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { showAddUser, newUserAdded, addUser } from \"../../action/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Localbase from \"localbase\";\nlet db = new Localbase(\"db\");\n\nexport default function AddFriend() {\n  const [friendName, setFriendName] = useState(\"\");\n  const friendList = useSelector((state) => state.addFriend.friendList);\n  //const showAddFriend = useSelector((state) => state.addFriend.showAddFriend);\n  const dispatch = useDispatch();\n  const addToDB = () => {\n    if (friendList.includes(friendName)) {\n      console.log(\"Name already Exist\");\n    } else if (friendName.length <= 0) {\n      console.log(\"Please Enter Name\");\n    } else {\n      db.collection(\"users\")\n        .add({\n          id: Date.now(),\n          friendName\n        })\n        .then(() => {\n          db.collection(\"users\")\n            .get()\n            .then((users) => {\n              dispatch(\n                addUser(\n                  users.map((e) => {\n                    return e.friendName;\n                  })\n                )\n              );\n            });\n        });\n      dispatch(newUserAdded(Date.now()));\n      dispatch(showAddUser(false));\n    }\n  };\n  const onBack =()=>{\n    dispatch(showAddUser(false));\n  }\n  const onChange = (e) => {\n    setFriendName(e.target.value.trim());\n  };\n  return (\n    <div className=\"input-group mb-3\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Please Enter Name to Add\"\n          aria-label=\"Please Enter Name to Add\"\n          aria-describedby=\"basic-addon2\"\n          onChange={onChange}\n          // onKeyDown={onKeyDown}\n        />\n          <div className=\"input-group-append\">\n            <button onClick={addToDB} className=\"btn btn-outline-secondary\" type=\"button\">\n             Add Friend\n            </button>\n            <button onClick={onBack} className=\"btn btn-outline-secondary\" type=\"button\">Go Back</button>\n          </div>\n        </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addUser } from \"../action/index\";\nimport Localbase from \"localbase\";\nlet db = new Localbase(\"db\");\n\nexport default function FriendList() {\n  const newUserAdded = useSelector((state) => state.addFriend.newUserAdded);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    db.collection(\"users\")\n      .get()\n      .then((users) => {\n        dispatch(\n          addUser(\n            users.map((e) => {\n              return e.friendName;\n            })\n          )\n        );\n      });\n  }, [newUserAdded]);\n}\n","export default function Dropdown({ label, value, options, onChange }) {\n  return (\n    <div className=\"input-group mt-3 dropdownColumn\" >\n      <label className='form-label'>\n      {label}\n      </label>\n      <select  className='form-select' value={value} onChange={onChange}>\n        {options.map((option) => (\n          <option className ='dropdown-item' value={option}>{option}</option>\n        ))}\n      </select>\n\n    \n    </div>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport Dropdown from \"../Dropdown\";\nimport { showAddUser, addUser, paidBy, description } from \"../../action/index\";\nimport { useEffect } from \"react\";\n\nexport default function AddDescription() {\n  const dispatch = useDispatch();\n  const onChange = (e) => {\n    dispatch(description(e?.target?.value));\n  };\n  return (\n    <>\n    <div class=\"input-group\">\n\n  <textarea onChange={onChange} placeholder ='Please enter description'class=\"form-control\" aria-label=\"With textarea\"></textarea>\n</div>\n    </>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport Dropdown from \"../Dropdown\";\nimport { showAddUser, addUser, paidBy, addAmount } from \"../../action/index\";\nimport { useEffect } from \"react\";\n\nexport default function Amount() {\n  const dispatch = useDispatch();\n  const onChange = (e) => {\n    dispatch(addAmount(e.target.value));\n  };\n  return (\n    <>\n      <div class=\"input-group mt-3\">\n        <input\n          type=\"number\"\n          placeholder=\"Enter Amount\"\n          className=\"form-control\"\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Dropdown from \"../Dropdown\";\nimport { showAddUser, addUser, paidBy } from \"../../action/index\";\n\nexport default function PaidBy() {\n  const Friends = useSelector((state) => state.addFriend.selectedFriends);\n  const [paidByList, setPaidByList] = useState([\"You\"]);\n  const paidBy1 = useSelector((state) => state.addFriend.paidBy);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setPaidByList([\"You\", ...Friends]);\n    dispatch(paidBy(paidByList[0]));\n  }, []);\n  useEffect(() => {\n    setPaidByList([\"You\", ...Friends]);\n  }, [Friends]);\n  const handleChange = (e) => {\n    dispatch(paidBy(e.target.value));\n  };\n\n  return (\n    <Dropdown\n      label=\"Paid By\"\n      value={paidBy1}\n      options={paidByList}\n      onChange={handleChange}\n    />\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport {useDispatch} from\"react-redux\";\nimport { showAddUser, addUser,splitBetween } from \"../action/index\";\n\nexport default function Checkbox({ items }) {\n  const dispatch = useDispatch()\n  const [checkedState, setCheckedState] = useState(\n    new Array(items.length).fill(true)\n  );\n  const [selectedItem, setSelectedItem] = useState([]);\n\n  useEffect(() => {\n    setCheckedState(new Array(items.length).fill(true));\n    setSelectedItem(items)\n    dispatch(splitBetween(items))\n  }, [items]);\n\n  const handleOnChange = (position) => {\n    const updatedCheckedState = checkedState.map((item, index) =>\n      index === position ? !item : item\n    );\n\n    setCheckedState(updatedCheckedState);\n\n    const name = updatedCheckedState.map((currentState, index) => {\n      if (currentState === true) {\n        return items[index];\n      } else {\n        return \"\";\n      }\n    });\n  \n    var newName = name.filter((n)=>{\n      return n.length > 0\n    })\n      setSelectedItem(newName);\n    dispatch(splitBetween(newName))\n  };\n\n  return (\n    <div className=\" mt-3\">\n      <label className='mt-1'>Split Between</label>\n        {items.map((item, index) => {\n          return (\n\n                <div className=\"form-check\">\n                  <input\n                  className='form-check-input'\n                    type=\"checkbox\"\n                    id={`custom-checkbox-${index}`}\n                    name={item}\n                    value={item}\n                    checked={checkedState[index]}\n                    onChange={() => handleOnChange(index)}\n                  />\n                  <label className ='form-check-label' htmlFor={`custom-checkbox-${index}`}>{item}</label>\n                </div>\n          );\n        })}\n    </div>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport { showAddUser, addUser } from \"../../action/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Checkbox from \"../Checkbox\";\nexport default function SplitBetween(){\n  const SelectedFriends = useSelector((state)=>state.addFriend.selectedFriends);\nreturn(\n  <Checkbox items={SelectedFriends} defaultValue={true}/>\n)\n\n\n}","import { useState, useEffect } from \"react\";\nimport {\n  showAddUser,\n  description,\n  selectedFriends,\n  addAmount,\n  closePopUp\n} from \"../../action/index\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Autocomplete from \"../Autocomplete/Autocomplete\";\nimport AddFriend from \"../AddFriend/AddFriend\";\nimport FriendList from \"../../utils/FriendList\";\nimport AddDescription from \"../AddDescription/AddDescription\";\nimport Amount from \"../AddAmount/Amount\";\nimport PaidBy from \"../PaidBy/PaidBy\";\nimport SplitBetween from \"../SplitBetween/SplitBetween\";\nimport Localbase from \"localbase\";\nlet db = new Localbase(\"db\");\n\nexport default function AddAnExpense({ show, onHide }) {\n  const dispatch = useDispatch();\n  const showAddFriend = useSelector((state) => state.addFriend.showAddFriend);\n\n  const friendList = useSelector((state) => state.addFriend.friendList);\n  const description1 = useSelector((state) => state.addFriend.description);\n  const paidBy = useSelector((state) => state.addFriend.paidBy);\n  const amount1 = useSelector((state) => state.addFriend.amount);\n  const SplitBetween1 = useSelector((state) => state.addFriend.splitBetween);\n\n  const selectedFriends1 = useSelector(\n    (state) => state.addFriend.selectedFriends\n  );\n\n  const showAddFriendEvent = () => {\n    dispatch(showAddUser(true));\n  };\n  const saveButton = () => {\n    var FirendsConsider = SplitBetween1;\n    var numberOfFriends = FirendsConsider.length;\n    if (numberOfFriends === 0) {\n      console.log(\"considering Friend List as number of friends\");\n      FirendsConsider = selectedFriends1;\n    } else {\n      FirendsConsider = SplitBetween1;\n    }\n\n    var TotalnumberOfFriend = numberOfFriends + 1;\n    var amountToBeSplit = amount1 / TotalnumberOfFriend;\n    console.log(amountToBeSplit, TotalnumberOfFriend, \"amount\");\n    var AmountReceivedByPayer = amountToBeSplit * numberOfFriends;\n    if (selectedFriends1.length <= 0) {\n      console.log(\"Please Select Friends\");\n      return;\n    } else if (!description1) {\n      console.log(\"please enter description\");\n      return;\n    } else if (!amount1) {\n      console.log(\"please enter description\");\n      return;\n    } else {\n      db.collection(\"Amount\")\n        .add({\n          id: Date.now(),\n          amount: amount1,\n          description: description1,\n          Totalamount: amount1,\n          TotalAmountPerPerson: amountToBeSplit,\n          payer: {\n            paidBy,\n            AmountReceivedByPayer\n          },\n          selectedFriends: selectedFriends1,\n          splitAmong: FirendsConsider\n        })\n        .then((e) => {\n          dispatch(description());\n          dispatch(closePopUp(false));\n          dispatch(selectedFriends([]));\n          dispatch(addAmount());\n        });\n    }\n  };\n  return (\n    <Modal show={show} onHide={onHide}>\n      <FriendList />\n      <Modal.Header closeButton>\n        <Modal.Title>Add an Expense</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {!showAddFriend ? (\n          <>\n            <Autocomplete\n              options={friendList}\n              showAddFriendEvent={showAddFriendEvent}\n            />\n            {selectedFriends1.length > 0 ? (\n              <>\n                <AddDescription />\n                <Amount />\n                <PaidBy />\n                <SplitBetween />\n              </>\n            ) : (\n              <></>\n            )}\n          </>\n        ) : (\n          <AddFriend />\n        )}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"btn btn-outline-secondary\" onClick={onHide}>\n          Close\n        </Button>\n        <Button variant=\"btn btn-outline-primary\" onClick={saveButton}>\n          Save Changes\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import { useEffect, useState } from \"react\";\nexport default function ExpenseRemains({ totalAmount, totalFriendBalance }) {\n  return (\n    <div className=\"card-body\">\n      {Math.sign(totalAmount) === -1\n        ? `You owe ${totalAmount.toFixed(2)} Rupees`\n        : totalAmount === 0\n        ? `All thing settled`\n        : `You will get ${totalAmount.toFixed(2)}`}\n    </div>\n  );\n}\n","export default function AllFriendAmount({ totalFriendBalance }) {\n  if (totalFriendBalance) {\n    return Object.entries(totalFriendBalance).map(([key, value]) => {\n      return (\n        <div className=\"card-body\">\n          <span>{key} Paid </span>\n          <span>{value.toFixed(2)}</span>\n        </div>\n      );\n    });\n  }\n}\n","import { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport \"./DashBoard.css\";\nimport AddAnExpense from \"../AddAnExpense/AddAnExpense\";\nimport ExpenseRemains from \"./ExpenseRemains\";\nimport AllFriendAmount from \"./AllFriendsAmount\";\nimport { closePopUp, showAddUser } from \"../../action/index\";\n\nimport Localbase from \"localbase\";\nimport { Accordion } from \"react-bootstrap\";\n\nlet db = new Localbase(\"db\");\n\nexport default function DashBoard() {\n  // const [open, setOpen] = useState(false);\n  const dispatch = useDispatch();\n  const open = useSelector((state) => state.addFriend.closePopUp);\n  const [balances, setBalance] = useState([]);\n  const [totalBalance, setTotalBalance] = useState(0);\n  const [friendM, setFriendM] = useState([]);\n\n  const openModal = () => {\n    dispatch(closePopUp(true));\n    // setOpen(true);\n  };\n  const closeModal = () => {\n    // setOpen(false);\n    dispatch(closePopUp(false));\n    dispatch(showAddUser(false));\n  };\n  useEffect(() => {\n    if (open === false) {\n      db.collection(\"Amount\")\n        .get()\n        .then((amount) => {\n          setBalance(amount);\n        });\n    }\n  }, [open]);\n  useEffect(() => {\n    var money = 0;\n    var FriendMoney = {};\n    var arrayOfMoney = [];\n    balances.map((balance) => {\n      if (FriendMoney[balance.payer.paidBy]) {\n        FriendMoney[balance.payer.paidBy] +=\n          balance.payer.AmountReceivedByPayer;\n      } else {\n        FriendMoney[balance.payer.paidBy] = balance.payer.AmountReceivedByPayer;\n      }\n      if (balance.payer.paidBy === \"You\") {\n        money = money + balance.payer.AmountReceivedByPayer;\n      } else {\n        money = money - balance.TotalAmountPerPerson;\n      }\n    });\n\n    setTotalBalance(money);\n    arrayOfMoney.push(FriendMoney);\n    setFriendM(FriendMoney);\n    console.log(friendM);\n  }, [balances]);\n  const DispalyBalance = () => {\n    return balances.length ? (\n      balances.map((balance, index) => {\n        return (\n          <Accordion>\n            <Accordion.Item eventKey={index + 1}>\n              <Accordion.Header>\n                {balance.description} with amount {balance.Totalamount} Paid By{\" \"}\n                {balance.payer.paidBy}\n              </Accordion.Header>\n              <Accordion.Body>\n                <span className=\"AmountToBeReceived\">\n                  Amount to be Received {balance.payer.AmountReceivedByPayer}.\n                  Amount is Split B/w {balance.selectedFriends.length + 1}{\" \"}\n                  people{\" \"}\n                  {balance.selectedFriends.map((index) => {\n                    return index;\n                  })}{\" \"}\n                  and You\n                </span>\n              </Accordion.Body>\n            </Accordion.Item>\n          </Accordion>\n        );\n      })\n    ) : (\n      <></>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <span>Dashboard</span>\n        <span>\n          <button className=\"btn btn-outline-primary\" onClick={openModal}>\n            Add An Expense\n          </button>\n        </span>\n      </div>\n      <div className=\"card\">\n        <AddAnExpense show={open} onHide={closeModal} />\n        <AllFriendAmount totalFriendBalance={friendM} />\n        <ExpenseRemains totalAmount={totalBalance} />\n        <DispalyBalance />\n      </div>\n    </div>\n  );\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport DashHeader from \"./component/DashHeader\";\nimport DashBoard from \"./component/Dashbord/DashBoard\";\nimport \"./styles.scss\";\nimport FriendList from \"./utils/FriendList\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <DashHeader />\n      <DashBoard />\n      <FriendList />\n    </div>\n  );\n}\n","const initialState = {\n  friendList: [],\n  showAddFriend: false,\n  newUserAdded: \"\",\n  selectedFriends: [\"\"],\n  paidBy: \"\",\n  description: \"\",\n  amount: \"\",\n  splitBetween: [\"\"],\n  closePopUp: false\n};\nconst addFriend = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ADD_FRIEND\":\n      return { ...state, friendList: action.payload };\n      break;\n    case \"SHOW_ADD_USER\":\n      return {\n        ...state,\n        showAddFriend: action.payload\n      };\n      break;\n    case \"NEW_USER_ADDED\":\n      return {\n        ...state,\n        newUserAdded: action.payload\n      };\n      break;\n    case \"SELECTED_FRIENDS\":\n      return {\n        ...state,\n        selectedFriends: action.payload\n      };\n      break;\n    case \"DESCRIPTION\":\n      return {\n        ...state,\n        description: action.payload\n      };\n    case \"PAID_BY\":\n      return {\n        ...state,\n        paidBy: action.payload\n      };\n    case \"ADD_AMOUNT\":\n      return {\n        ...state,\n        amount: action.payload\n      };\n    case \"SPLIT_BETWEEN\":\n      return {\n        ...state,\n        splitBetween: action.payload\n      };\n    case \"CLOSE_POP_UP\":\n      return {\n        ...state,\n        closePopUp: action.payload\n      };\n    default:\n      return state;\n      break;\n  }\n};\n\nexport default addFriend;\n","import addFriend from \"./addfriend\";\nimport amount from \"./amount\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducers = combineReducers({\n  addFriend\n});\n\nexport default rootReducers;\n","import { applyMiddleware, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport rootReducers from \"../reducer/index\";\n\nconst store = createStore(rootReducers, applyMiddleware(thunk));\n\nexport default store;\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </StrictMode>\n);\n"],"sourceRoot":""}